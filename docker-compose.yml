version: '2'
services:
  app:
    image: flink01:1
    build: .
    command: standalone-job
    links:
      - jobmanager:jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - profile=docker
    depends_on:
      - kafka
      - mysql
      - taskmanager
  jobmanager:
    image: flink-server:1
    build: ./docker/flink-server
    hostname: "jobmanager"
    expose:
      - "6123"
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  taskmanager:
    image: flink-server:1
    build: ./docker/flink-server
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - jobmanager:jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: "kafka"

  data-generator:
    image: apache/data-generator:1
    build: ./docker/data-generator
    depends_on:
      - kafka
  mysql:
    image: arm64v8/mysql:8.0.29
    command: --default-authentication-plugin=mysql_native_password --secure_file_priv=/data
    ports:
      - "23306:3306"
    environment:
      MYSQL_USER: "sql-demo"
      MYSQL_PASSWORD: "demo-sql"
      MYSQL_DATABASE: "sql-demo"
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    volumes:
      - ./docker/mysql-spend-report-init:/docker-entrypoint-initdb.d
      - ./data:/data
  grafana:
    image: grafana/grafana:7.5.8
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    volumes:
      - ./docker/grafana-spend-report-init/provisioning/:/etc/grafana/provisioning/
      - ./docker/grafana-spend-report-init/dashboard.json:/etc/grafana/dashboard.json
      - ./docker/grafana-spend-report-init/grafana.ini:/etc/grafana/grafana.ini